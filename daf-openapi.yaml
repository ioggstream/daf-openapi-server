openapi: 3.0.0
info:
  title: Pdnd API
  version: 0.1.0
  contact:
    email: alessandro@teamdigitale.governo.it
    name: Alessandro Ercolani
  description: |
    #### Documentazione
    Il servizio si propone di esporre tramite openapi3 alcune API del PDND - Daf
    #### Note
    Il servizio richiede autenticazione tramite Bearer o Basic Auth previa registrazione sul portale
     https://dataportal.daf.teamdigitale.governo.it , e va' usato rispettando gli
    header di throttling esposti in conformita' alle Linee Guida del Modello di interoperabilita'.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:8080/dafapi/v1
paths:
  /auth/{user_id}:
    get:
      summary: Return JWT token
      operationId: app.generate_token
      parameters:
      - name: user_id
        description: User unique identifier
        in: path
        required: true
        example: 12
        schema:
          type: integer
      responses:
        '200':
          description: JWT token
          content:
            'text/plain':
              schema:
                type: string
  /token:
    get:
      description: |
        Return JWT token
      operationId: app.get_token
      security:
        - basic: []
      responses:
        '200':
          content:
            'text/plain':
              schema:
                type: string
          description: |
            JWT token.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
        '503':
          $ref: '#/components/responses/503ServiceUnavailable'
        default:
          $ref: '#/components/responses/default'
      summary: Ritorna un timestamp in formato RFC5424.
      tags:
      - public
components:
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
    basic:
      type: http
      scheme: basic
      x-basicInfoFunc: app.basic_auth
  headers:
    Retry-After:
      description: |-
        Retry contacting the endpoint *at least* after seconds.
        See https://tools.ietf.org/html/rfc7231#section-7.1.3
      schema:
        format: int32
        type: integer
    X-RateLimit-Limit:
      description: The number of allowed requests in the current period
      schema:
        format: int32
        type: integer
    X-RateLimit-Remaining:
      description: The number of remaining requests in the current period
      schema:
        format: int32
        type: integer
    X-RateLimit-Reset:
      description: The number of seconds left in the current period
      schema:
        format: int32
        type: integer
  responses:
    400BadRequest:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Bad Request
    404NotFound:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Not Found
    429TooManyRequests:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Too many requests
      headers:
        Retry-After:
          description: |-
            Retry contacting the endpoint *at least* after seconds.
            See https://tools.ietf.org/html/rfc7231#section-7.1.3
          schema:
            format: int32
            type: integer
        X-RateLimit-Limit:
          description: The number of allowed requests in the current period
          schema:
            format: int32
            type: integer
        X-RateLimit-Remaining:
          description: The number of remaining requests in the current period
          schema:
            format: int32
            type: integer
        X-RateLimit-Reset:
          description: The number of seconds left in the current period
          schema:
            format: int32
            type: integer
    503ServiceUnavailable:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Service Unavailable
      headers:
        Retry-After:
          description: |-
            Retry contacting the endpoint *at least* after seconds.
            See https://tools.ietf.org/html/rfc7231#section-7.1.3
          schema:
            format: int32
            type: integer
    default:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Unexpected error
  schemas:
    Problem:
      properties:
        detail:
          description: |
            A human readable explanation specific to this occurrence of the
            problem.
          example: Connection to database timed out
          type: string
        instance:
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
          format: uri
          type: string
        status:
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          example: 503
          exclusiveMaximum: true
          format: int32
          maximum: 600
          minimum: 100
          type: integer
        title:
          description: |
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
          type: string
        type:
          default: about:blank
          description: |
            An absolute URI that identifies the problem type.  When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          example: https://tools.ietf.org/html/rfc7231#section-6.6.4
          format: uri
          type: string
      type: object
